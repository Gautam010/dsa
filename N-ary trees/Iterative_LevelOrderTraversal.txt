/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        queue<Node*> q;
        vector<vector<int>> res;
        if(root!=NULL) {
            q.push(root);
            while(!q.empty()) {
                int n = q.size();
                vector<int> temp;
                for(int i=0;i<n;i++) {
                    Node *ptr = q.front();
                    q.pop();
                    temp.push_back(ptr->val);
                    for(int j=0;j<ptr->children.size();j++) {
                        q.push(ptr->children[j]);
                    }
                }
                res.push_back(temp);
            }   
        }
        return res;
    }
};